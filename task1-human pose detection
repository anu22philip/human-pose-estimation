# USAGE
# python detect.py --images images

# import the necessary packages
from __future__ import print_function
from imutils.object_detection import non_max_suppression
from imutils import paths
import numpy as np
import argparse
import imutils
import cv2

# initialize the HOG descriptor/person detector
hog = cv2.HOGDescriptor()
hog.setSVMDetector(cv2.HOGDescriptor_getDefaultPeopleDetector())

#change image
#imm = "a1.png"
#imm = "index.bmp"
imm = "images.png"
#imm = "person_014.bmp"
#imm = "person_265.bmp"
#imm = "IMG_20150907_121859.jpg"
#imm = "DSC_0287.JPG"
#imm = "imm.jpg"


image = cv2.imread(imm)
image = imutils.resize(image, width=min(400, image.shape[1]))
orig = image.copy()

# detect people in the image
(rects, weights) = hog.detectMultiScale(image, winStride=(4, 4),padding=(8, 8),scale=1.05)	

# apply non-maxima suppression to the bounding boxes using a
# fairly large overlap threshold to try to maintain overlapping
# boxes that are still people
rects = np.array([[x, y, x + w, y + h] for (x, y, w, h) in rects])
pick = non_max_suppression(rects, probs=None, overlapThresh=0.65)

print(rects)
print(pick)
print(len(rects))
print(len(pick))
# draw the final bounding boxes
for (xA, yA, xB, yB) in pick:
	#cv2.rectangle(image, (xA, yA), (xB, yB), (0, 255, 0), 2)
	cv2.line(image, (xA+80,yA), (xB-80,yB), (255,0,0), 2)

# show some information on the number of bounding boxes

filename = imm
print("[INFO] {}: {} original boxes, {} after suppression".format(
	filename, len(rects), len(pick)))

# show the output images

cv2.imshow("IMS", image)
cv2.waitKey(0)
